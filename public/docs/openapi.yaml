openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: ''
      parameters: []
      responses:
        200:
          description: 'Register Success'
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 2|MPvbf6j8OVfoPKuF5bBMUXiE6JrymdQFFHVTHuK1
                properties:
                  token:
                    type: string
                    example: 2|MPvbf6j8OVfoPKuF5bBMUXiE6JrymdQFFHVTHuK1
        400:
          description: 'User send a valid token'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already logged in'
                properties:
                  message:
                    type: string
                    example: 'You are already logged in'
        401:
          description: 'Email or password is wrong or user type not user'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'email or password is wrong'
                properties:
                  message:
                    type: string
                    example: 'email or password is wrong'
        422:
          description: 'Validation errors'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The email field is required. (and 1 more error)'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The email field is required. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: adrienne.ratke@example.org
                password:
                  type: string
                  description: ''
                  example: distinctio
              required:
                - email
                - password
      security: []
  /api/LoginAdmin:
    post:
      summary: LoginAdmin
      operationId: loginAdmin
      description: ''
      parameters: []
      responses:
        200:
          description: 'Register Success'
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 10|tMg2ECrNKojN04dLReIzUIitovJT0NFA3UWUpQPL
                properties:
                  token:
                    type: string
                    example: 10|tMg2ECrNKojN04dLReIzUIitovJT0NFA3UWUpQPL
        400:
          description: 'User send a valid token'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already logged in'
                properties:
                  message:
                    type: string
                    example: 'You are already logged in'
        401:
          description: 'Email or password is wrong or user type not admin or doctor'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'email or password is wrong'
                properties:
                  message:
                    type: string
                    example: 'email or password is wrong'
        422:
          description: 'Validation errors'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The email field is required. (and 1 more error)'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'The email field is required. (and 1 more error)'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rutherford.lula@example.net
                password:
                  type: string
                  description: ''
                  example: aperiam
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: ''
      parameters: []
      responses:
        200:
          description: 'Register Success'
          content:
            application/json:
              schema:
                type: object
                example:
                  token: 11|mrQIWhkKsOorLKuQC0scfJWiKvv7scLmuw2wz71T
                properties:
                  token:
                    type: string
                    example: 11|mrQIWhkKsOorLKuQC0scfJWiKvv7scLmuw2wz71T
        400:
          description: 'User already login'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already logged in'
                properties:
                  message:
                    type: string
                    example: 'You are already logged in'
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"message\": \"The nick name field is required. (and 5 more errors)\",\n\"errors\": {\n\"NickName\": [\n\"The nick name field is required.\"\n],\n\"FirstName\": [\n\"The first name field is required.\"\n],\n\"LastName\": [\n\"The last name field is required.\"\n],\n\"email\": [\n\"The email has already been taken.\"\n],\n\"password\": [\n\"The password field must be at least 8 characters.\"\n],\n\"PhoneNumber\": [\n\"The phone number field is required.\"\n]\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                NickName:
                  type: string
                  description: ''
                  example: est
                FirstName:
                  type: string
                  description: ''
                  example: sit
                LastName:
                  type: string
                  description: ''
                  example: sit
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: cole.drake@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters. Must not be greater than 16 characters.'
                  example: 'Fy,1nZj9e,^;e'
                PhoneNumber:
                  type: string
                  description: ''
                  example: minima
                Country:
                  type: string
                  description: ''
                  example: null
                City:
                  type: string
                  description: ''
                  example: null
                ProfileImage:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                icon:
                  type: string
                  format: binary
                  description: 'Must be an image.'
              required:
                - NickName
                - FirstName
                - LastName
                - email
                - password
                - PhoneNumber
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: ''
      parameters: []
      responses:
        204:
          description: 'Logout Success'
        401:
          description: 'User Not Login Yet'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
      security: []
  /api/Department:
    get:
      summary: 'See all Department'
      operationId: seeAllDepartment
      description: ''
      parameters:
        -
          in: query
          name: perPage
          description: "To return limite data in single page.\nDefaults value for variable '15'."
          example: 12
          required: false
          schema:
            type: integer
            description: "To return limite data in single page.\nDefaults value for variable '15'."
            example: 12
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      department_id: 1
                      department_name: eum
                      description: "Where CAN I have to beat time when I grow up, I'll write one--but I'm grown up now,' she said, 'than waste it in a hurry: a large plate came skimming out, straight at the proposal. 'Then the."
                      Image: null
                    -
                      department_id: 2
                      department_name: cumque
                      description: 'March Hare will be much the most curious thing I ever saw one that size? Why, it fills the whole thing very absurd, but they began moving about again, and made another rush at the Lizard as she.'
                      Image: null
                    -
                      department_id: 3
                      department_name: animi
                      description: "Queen: so she went on in the air. She did it so VERY wide, but she thought at first she thought it over here,' said the Hatter. 'Stolen!' the King said, turning to Alice for protection. 'You shan't."
                      Image: null
                  links:
                    first: 'http://127.0.0.1:8000/api/Department?page=1'
                    last: 'http://127.0.0.1:8000/api/Department?page=47'
                    prev: null
                    next: 'http://127.0.0.1:8000/api/Department?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 47
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=9'
                        label: '9'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=10'
                        label: '10'
                        active: false
                      -
                        url: null
                        label: ...
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=46'
                        label: '46'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=47'
                        label: '47'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Department?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://127.0.0.1:8000/api/Department'
                    per_page: 3
                    to: 3
                    total: 141
                properties:
                  data:
                    type: array
                    example:
                      -
                        department_id: 1
                        department_name: eum
                        description: "Where CAN I have to beat time when I grow up, I'll write one--but I'm grown up now,' she said, 'than waste it in a hurry: a large plate came skimming out, straight at the proposal. 'Then the."
                        Image: null
                      -
                        department_id: 2
                        department_name: cumque
                        description: 'March Hare will be much the most curious thing I ever saw one that size? Why, it fills the whole thing very absurd, but they began moving about again, and made another rush at the Lizard as she.'
                        Image: null
                      -
                        department_id: 3
                        department_name: animi
                        description: "Queen: so she went on in the air. She did it so VERY wide, but she thought at first she thought it over here,' said the Hatter. 'Stolen!' the King said, turning to Alice for protection. 'You shan't."
                        Image: null
                    items:
                      type: object
                      properties:
                        department_id:
                          type: integer
                          example: 1
                        department_name:
                          type: string
                          example: eum
                        description:
                          type: string
                          example: "Where CAN I have to beat time when I grow up, I'll write one--but I'm grown up now,' she said, 'than waste it in a hurry: a large plate came skimming out, straight at the proposal. 'Then the."
                        Image:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Department?page=1'
                      last:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Department?page=47'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Department?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 47
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=8'
                            label: '8'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=9'
                            label: '9'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=10'
                            label: '10'
                            active: false
                          -
                            url: null
                            label: ...
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=46'
                            label: '46'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=47'
                            label: '47'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Department?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Department'
                      per_page:
                        type: integer
                        example: 3
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 141
      tags:
        - DepartmentHome
      security: []
  '/api/Department/{id}':
    get:
      summary: 'See One Department'
      operationId: seeOneDepartment
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    department_id: 141
                    department_name: asasssssssssa
                    description: aassassasasas
                    Image: odksaok
                properties:
                  data:
                    type: object
                    properties:
                      department_id:
                        type: integer
                        example: 141
                      department_name:
                        type: string
                        example: asasssssssssa
                      description:
                        type: string
                        example: aassassasasas
                      Image:
                        type: string
                        example: odksaok
        404:
          description: 'This Department not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - DepartmentHome
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Department.'
        example: 1
        required: true
        schema:
          type: integer
  /api/Doctor:
    get:
      summary: 'See All Doctor'
      operationId: seeAllDoctor
      description: ''
      parameters:
        -
          in: query
          name: perPage
          description: "To return limite data in single page.\nDefaults value for variable '15'."
          example: 4
          required: false
          schema:
            type: integer
            description: "To return limite data in single page.\nDefaults value for variable '15'."
            example: 4
      responses:
        200:
          description: 'Success Process'
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"data\": [\n{\n\"Doctor_ID\": 6,\n\"type\": \"Doctor\",\n\"Doctor_Name\": {\n\"FirstName\": \"Fernando\",\n\"LastName\": \"Herman\"\n},\n\"Doctor_Speciality_And_Donor_Name\": [],\n\"Doctor Experience\": 46,\n\"Doctor_Image\": \"http://mclaughlin.com/ipsum-cum-ad-eius-inventore-dolores-et-ratione\",\n\"Doctor_City\": null,\n\"Doctor_Country\": null\n},\n{\n\"Doctor_ID\": 17,\n\"type\": \"Doctor\",\n\"Doctor_Name\": {\n\"FirstName\": \"Casper\",\n\"LastName\": \"Bayer\"\n},\n\"Doctor_Speciality_And_Donor_Name\": [\n{\n\"Name_Certifications\": \"vel\",\n\"Donor_Certifications\": \"omnis\"\n}\n],\n\"Doctor Experience\": 1,\n\"Doctor_Image\": \"http://ankunding.com/optio-eaque-quia-officia-harum-iure\",\n\"Doctor_City\": null,\n\"Doctor_Country\": null\n},\n{\n\"Doctor_ID\": 18,\n\"type\": \"Doctor\",\n\"Doctor_Name\": {\n\"FirstName\": \"Kadin\",\n\"LastName\": \"King\"\n},\n\"Doctor_Speciality_And_Donor_Name\": [\n{\n\"Name_Certifications\": \"est\",\n\"Donor_Certifications\": \"molestias\"\n}\n],\n\"Doctor Experience\": 15,\n\"Doctor_Image\": \"http://goodwin.com/odio-quia-exercitationem-nesciunt-est-molestias\",\n\"Doctor_City\": null,\n\"Doctor_Country\": null\n}\n],\n\"links\": {\n\"first\": \"http://127.0.0.1:8000/api/Doctor?page=1\",\n\"last\": \"http://127.0.0.1:8000/api/Doctor?page=8\",\n\"prev\": null,\n\"next\": \"http://127.0.0.1:8000/api/Doctor?page=2\"\n},\n\"meta\": {\n\"current_page\": 1,\n\"from\": 1,\n\"last_page\": 8,\n\"links\": [\n{\n\"url\": null,\n\"label\": \"&laquo; Previous\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=1\",\n\"label\": \"1\",\n\"active\": true\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=2\",\n\"label\": \"2\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=3\",\n\"label\": \"3\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=4\",\n\"label\": \"4\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=5\",\n\"label\": \"5\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=6\",\n\"label\": \"6\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=7\",\n\"label\": \"7\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=8\",\n\"label\": \"8\",\n\"active\": false\n},\n{\n\"url\": \"http://127.0.0.1:8000/api/Doctor?page=2\",\n\"label\": \"Next &raquo;\",\n\"active\": false\n}\n],\n\"path\": \"http://127.0.0.1:8000/api/Doctor\",\n\"per_page\": 3,\n\"to\": 3,\n\"total\": 22\n}\n}\n}"
      tags:
        - DoctorHome
      security: []
  '/api/Doctor/{id}':
    get:
      summary: 'See One Doctor'
      operationId: seeOneDoctor
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    Doctor_ID: 143
                    doctor_name:
                      FirstName: Ada
                      LastName: Marvin
                    doctor_speciality_and_donor_name: []
                    'doctor experience': 32
                    doctor_city: null
                    doctor_country: null
                    doctor_work_schedule:
                      -
                        from_hour: '12:00 am'
                        to_hour: '12:00 am'
                        day_name: Wednesday
                properties:
                  data:
                    type: object
                    properties:
                      Doctor_ID:
                        type: integer
                        example: 143
                      doctor_name:
                        type: object
                        properties:
                          FirstName:
                            type: string
                            example: Ada
                          LastName:
                            type: string
                            example: Marvin
                      doctor_speciality_and_donor_name:
                        type: array
                        example: []
                      'doctor experience':
                        type: integer
                        example: 32
                      doctor_city:
                        type: string
                        example: null
                      doctor_country:
                        type: string
                        example: null
                      doctor_work_schedule:
                        type: array
                        example:
                          -
                            from_hour: '12:00 am'
                            to_hour: '12:00 am'
                            day_name: Wednesday
                        items:
                          type: object
                          properties:
                            from_hour:
                              type: string
                              example: '12:00 am'
                            to_hour:
                              type: string
                              example: '12:00 am'
                            day_name:
                              type: string
                              example: Wednesday
        404:
          description: 'This Doctor Not Found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - DoctorHome
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Doctor.'
        example: 1
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/PatientAppointment:
    post:
      summary: Register
      operationId: register
      description: ''
      parameters: []
      responses:
        204:
          description: 'Create Appointment Success'
        422:
          description: 'Validation errors'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The selected patient i d is invalid. (and 3 more errors)'
                  errors:
                    PatientID:
                      - 'The selected patient i d is invalid.'
                    ClinicID:
                      - 'The clinic i d field is required.'
                    doctor_id:
                      - 'The doctor id field is required.'
                    AppointmentDate:
                      - 'The appointment date field must be a date after today.'
                properties:
                  message:
                    type: string
                    example: 'The selected patient i d is invalid. (and 3 more errors)'
                  errors:
                    type: object
                    properties:
                      PatientID:
                        type: array
                        example:
                          - 'The selected patient i d is invalid.'
                        items:
                          type: string
                      ClinicID:
                        type: array
                        example:
                          - 'The clinic i d field is required.'
                        items:
                          type: string
                      doctor_id:
                        type: array
                        example:
                          - 'The doctor id field is required.'
                        items:
                          type: string
                      AppointmentDate:
                        type: array
                        example:
                          - 'The appointment date field must be a date after today.'
                        items:
                          type: string
      tags:
        - PatientAppointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PatientID:
                  type: string
                  description: ''
                  example: consequuntur
                ClinicID:
                  type: string
                  description: ''
                  example: voluptatem
                doctor_id:
                  type: string
                  description: ''
                  example: doloribus
                AppointmentDate:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2083-07-01'
              required:
                - PatientID
                - ClinicID
                - doctor_id
                - AppointmentDate
      security: []
  /api/Post:
    get:
      summary: 'See all Post'
      operationId: seeAllPost
      description: ''
      parameters:
        -
          in: query
          name: perPage
          description: "To return limite data in single page.\nDefaults value for variable '15'."
          example: 11
          required: false
          schema:
            type: integer
            description: "To return limite data in single page.\nDefaults value for variable '15'."
            example: 11
        -
          in: query
          name: postType
          description: "String To return Type of post in single page Example ('News','Event')."
          example: 7
          required: true
          schema:
            type: integer
            description: "String To return Type of post in single page Example ('News','Event')."
            example: 7
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      post_id: 4
                      post_title: Dr.
                      post_text: 'Aut id necessitatibus ducimus. Sit est voluptatum debitis non et. Maxime in ducimus est distinctio aut fugit.'
                      post_type: Event
                      Image: null
                    -
                      post_id: 6
                      post_title: Dr.
                      post_text: 'Reiciendis sit ratione nulla. Architecto tenetur maiores qui. Necessitatibus vitae ducimus recusandae officia error est.'
                      post_type: Event
                      Image: null
                    -
                      post_id: 7
                      post_title: Dr.
                      post_text: 'Sint quas modi aut fuga animi. Quia doloremque aut et aut omnis rerum. Ea consectetur consequuntur autem iste ut.'
                      post_type: Event
                      Image: null
                  links:
                    first: 'http://127.0.0.1:8000/api/Post?page=1'
                    last: 'http://127.0.0.1:8000/api/Post?page=2'
                    prev: null
                    next: 'http://127.0.0.1:8000/api/Post?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 2
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Post?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://127.0.0.1:8000/api/Post?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/Post?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://127.0.0.1:8000/api/Post'
                    per_page: 3
                    to: 3
                    total: 5
                properties:
                  data:
                    type: array
                    example:
                      -
                        post_id: 4
                        post_title: Dr.
                        post_text: 'Aut id necessitatibus ducimus. Sit est voluptatum debitis non et. Maxime in ducimus est distinctio aut fugit.'
                        post_type: Event
                        Image: null
                      -
                        post_id: 6
                        post_title: Dr.
                        post_text: 'Reiciendis sit ratione nulla. Architecto tenetur maiores qui. Necessitatibus vitae ducimus recusandae officia error est.'
                        post_type: Event
                        Image: null
                      -
                        post_id: 7
                        post_title: Dr.
                        post_text: 'Sint quas modi aut fuga animi. Quia doloremque aut et aut omnis rerum. Ea consectetur consequuntur autem iste ut.'
                        post_type: Event
                        Image: null
                    items:
                      type: object
                      properties:
                        post_id:
                          type: integer
                          example: 4
                        post_title:
                          type: string
                          example: Dr.
                        post_text:
                          type: string
                          example: 'Aut id necessitatibus ducimus. Sit est voluptatum debitis non et. Maxime in ducimus est distinctio aut fugit.'
                        post_type:
                          type: string
                          example: Event
                        Image:
                          type: string
                          example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Post?page=1'
                      last:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Post?page=2'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Post?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 2
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Post?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://127.0.0.1:8000/api/Post?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/Post?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://127.0.0.1:8000/api/Post'
                      per_page:
                        type: integer
                        example: 3
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 5
      tags:
        - PostHome
      security: []
  '/api/Post/{id}':
    get:
      summary: 'See One Post'
      operationId: seeOnePost
      description: ''
      parameters: []
      responses:
        200:
          description: 'Success Process'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    post_id: 12
                    post_title: asasssssssssa
                    post_text: aassassasasas
                    post_type: News
                    Image: odksaok
                properties:
                  data:
                    type: object
                    properties:
                      post_id:
                        type: integer
                        example: 12
                      post_title:
                        type: string
                        example: asasssssssssa
                      post_text:
                        type: string
                        example: aassassasasas
                      post_type:
                        type: string
                        example: News
                      Image:
                        type: string
                        example: odksaok
        404:
          description: 'This post not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'not found'
                properties:
                  message:
                    type: string
                    example: 'not found'
      tags:
        - PostHome
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Post.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nThis Api For Authentication"
  -
    name: DepartmentHome
    description: "\nAPIs For Departments In Home Page"
  -
    name: DoctorHome
    description: "\nAPIs For Doctor In Home Page"
  -
    name: Endpoints
    description: ''
  -
    name: PatientAppointment
    description: "\nThis Api For PatientAppointment"
  -
    name: PostHome
    description: "\nAPIs For Posts In Home Page"
