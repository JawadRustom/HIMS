CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "user_types" ("id" integer primary key autoincrement not null, "UserType" varchar not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "UserTypeId" integer not null, "NickName" varchar not null, "FirstName" varchar not null, "LastName" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "PhoneNumber" varchar not null, "Country" varchar, "City" varchar, "ProfileImage" varchar, "icon" varchar, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, foreign key("UserTypeId") references "user_types"("id"));
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "patients" ("id" integer primary key autoincrement not null, "user_id" integer not null, "NationalNumber" varchar not null, "PatientStatus" varchar, "Gender" varchar not null, "BirthDate" datetime not null, "PatientLength" integer, "PatientWeight" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "departments" ("id" integer primary key autoincrement not null, "DepartmentName" varchar not null, "Description" varchar not null, "ManagerID" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "analysis" ("id" integer primary key autoincrement not null, "AnalysisName" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "certifications" ("id" integer primary key autoincrement not null, "CertificationName" varchar not null, "CertificationDonor" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "diseases" ("id" integer primary key autoincrement not null, "DiseasesName" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "equipment_types" ("id" integer primary key autoincrement not null, "Equipment_Type_Name" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "medicines" ("id" integer primary key autoincrement not null, "MedicineName" varchar not null, "MedicineQuantity" integer not null, "MedicinePrice" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "rooms" ("id" integer primary key autoincrement not null, "RoomType" varchar not null, "FloorNumber" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "symptoms" ("id" integer primary key autoincrement not null, "SymptomsName" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "operations" ("id" integer primary key autoincrement not null, "OperationName" varchar not null, "OperationPrice" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "employees" ("id" integer primary key autoincrement not null, "user_id" integer not null, "EmployeeTypeId" integer not null, "NationalNumber" varchar not null, "DepartmentID" integer not null, "Address" varchar, "HireDate" datetime not null, "Gender" varchar not null, "BirthDate" datetime not null, "Salary" integer not null, "ManagerID" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("DepartmentID") references "departments"("id"));
CREATE TABLE IF NOT EXISTS "blood_banks" ("id" integer primary key autoincrement not null, "Name" varchar not null, "Type" varchar not null, "Quantity" integer not null, "RoomID" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("RoomID") references "rooms"("id"));
CREATE TABLE IF NOT EXISTS "certification_employees" ("id" integer primary key autoincrement not null, "EmployeeID" integer not null, "CertificationID" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "clinics" ("id" integer primary key autoincrement not null, "ClinicsType" varchar not null, "DepartmentID" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("DepartmentID") references "departments"("id"));
CREATE TABLE IF NOT EXISTS "deaths" ("id" integer primary key autoincrement not null, "PatientID" integer not null, "DeathDate" datetime not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "diagnoseds" ("id" integer primary key autoincrement not null, "DoctoriD" integer not null, "PatientID" integer not null, "DiseaseID" integer not null, "Details" varchar not null, "PatientAppointmentID" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("DoctoriD") references "employees"("id"), foreign key("PatientID") references "patients"("id"), foreign key("DiseaseID") references "diseases"("id"), foreign key("PatientAppointmentID") references "patient_appointments"("id"));
CREATE TABLE IF NOT EXISTS "equipment" ("id" integer primary key autoincrement not null, "EquipmentTypeID" integer not null, "Details" varchar, "CompanyName" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("EquipmentTypeID") references "equipment_types"("id"));
CREATE TABLE IF NOT EXISTS "equipment_bills" ("id" integer primary key autoincrement not null, "EmployeeID" integer not null, "EquipmentID" integer not null, "BillDate" datetime not null, "Quantity" integer not null, "Price" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("EmployeeID") references "employees"("id"), foreign key("EquipmentID") references "equipment"("id"));
CREATE TABLE IF NOT EXISTS "medicine_bills" ("id" integer primary key autoincrement not null, "MedicineID" integer not null, "EmployeeID" integer not null, "BillDate" datetime not null, "Quantity" integer not null, "BuyPrice" integer not null, "SalePrice" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("MedicineID") references "medicines"("id"), foreign key("EmployeeID") references "employees"("id"));
CREATE TABLE IF NOT EXISTS "patient_analysis" ("id" integer primary key autoincrement not null, "PatientID" integer not null, "AnalysisID" integer not null, "AnalysisDate" datetime not null, "AnalysisRatio" varchar not null, "AnalysisResult" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("PatientID") references "patients"("id"), foreign key("AnalysisID") references "analysis"("id"));
CREATE TABLE IF NOT EXISTS "patient_appointments" ("id" integer primary key autoincrement not null, "PatientID" integer not null, "ClinicID" integer not null, "AppointmentDate" datetime not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("PatientID") references "patients"("id"), foreign key("ClinicID") references "clinics"("id"));
CREATE TABLE IF NOT EXISTS "patient_medicines" ("id" integer primary key autoincrement not null, "MedicineID" integer not null, "DiagnosedID" integer not null, "MedicineCaliber" integer not null, "DosagePerDay" integer not null, "DaysCount" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("MedicineID") references "medicines"("id"), foreign key("DiagnosedID") references "diagnoseds"("id"));
CREATE TABLE IF NOT EXISTS "patients_operations" ("id" integer primary key autoincrement not null, "PatientID" integer not null, "DoctorID" integer not null, "AnesthesiologistID" integer not null, "OperationID" integer not null, "OperationDate" datetime not null, "DoctorCommission" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("PatientID") references "patients"("id"), foreign key("DoctorID") references "employees"("id"), foreign key("AnesthesiologistID") references "employees"("id"), foreign key("OperationID") references "operations"("id"));
CREATE TABLE IF NOT EXISTS "patient_symptoms" ("id" integer primary key autoincrement not null, "PatientID" integer not null, "SymptomID" integer not null, "SymptomDate" datetime not null, "Description" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("PatientID") references "patients"("id"), foreign key("SymptomID") references "symptoms"("id"));
CREATE TABLE IF NOT EXISTS "room_contents" ("id" integer primary key autoincrement not null, "EquipmentID" integer not null, "RoomID" integer not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("EquipmentID") references "equipment"("id"), foreign key("RoomID") references "rooms"("id"));
CREATE TABLE IF NOT EXISTS "work_schedules" ("id" integer primary key autoincrement not null, "EmployeeID" integer not null, "RoomID" integer not null, "FromHour" time not null, "ToHour" time not null, "WorkDayName" datetime not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("EmployeeID") references "employees"("id"), foreign key("RoomID") references "rooms"("id"));
CREATE TABLE IF NOT EXISTS "posts" ("id" integer primary key autoincrement not null, "Title" varchar not null, "Text" varchar not null, "PostType" varchar not null, "PostDate" datetime not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "employee_types" ("id" integer primary key autoincrement not null, "Type" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "photos" ("id" integer primary key autoincrement not null, "imageable_id" integer not null, "imageable_type" varchar not null, "filename" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
INSERT INTO migrations VALUES(1,'2013_03_18_232543_create_user_types_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(3,'2014_10_12_100000_create_password_reset_tokens_table',1);
INSERT INTO migrations VALUES(4,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(5,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(6,'2023_04_01_104019_create_patients_table',1);
INSERT INTO migrations VALUES(7,'2023_04_01_104020_create_departments_table',1);
INSERT INTO migrations VALUES(8,'2023_04_01_104021_create_analysis_table',1);
INSERT INTO migrations VALUES(9,'2023_04_01_104022_create_certifications_table',1);
INSERT INTO migrations VALUES(10,'2023_04_01_104023_create_diseases_table',1);
INSERT INTO migrations VALUES(11,'2023_04_01_104024_create_equipment_types_table',1);
INSERT INTO migrations VALUES(12,'2023_04_01_104025_create_medicines_table',1);
INSERT INTO migrations VALUES(13,'2023_04_01_104026_create_rooms_table',1);
INSERT INTO migrations VALUES(14,'2023_04_01_104027_create_symptoms_table',1);
INSERT INTO migrations VALUES(15,'2023_04_01_104028_create_operations_table',1);
INSERT INTO migrations VALUES(16,'2023_04_01_104029_create_employees_table',1);
INSERT INTO migrations VALUES(17,'2023_04_01_104030_create_blood_banks_table',1);
INSERT INTO migrations VALUES(18,'2023_04_01_104031_create_certification_employees_table',1);
INSERT INTO migrations VALUES(19,'2023_04_01_104032_create_clinics_table',1);
INSERT INTO migrations VALUES(20,'2023_04_01_104033_create_deaths_table',1);
INSERT INTO migrations VALUES(21,'2023_04_01_104034_create_diagnoseds_table',1);
INSERT INTO migrations VALUES(22,'2023_04_01_104035_create_equipment_table',1);
INSERT INTO migrations VALUES(23,'2023_04_01_104036_create_equipment_bills_table',1);
INSERT INTO migrations VALUES(24,'2023_04_01_104037_create_medicine_bills_table',1);
INSERT INTO migrations VALUES(25,'2023_04_01_104038_create_patient_analysis_table',1);
INSERT INTO migrations VALUES(26,'2023_04_01_104039_create_patient_appointments_table',1);
INSERT INTO migrations VALUES(27,'2023_04_01_104040_create_patient_medicines_table',1);
INSERT INTO migrations VALUES(28,'2023_04_01_104041_create_patients_operations_table',1);
INSERT INTO migrations VALUES(29,'2023_04_01_104042_create_patient_symptoms_table',1);
INSERT INTO migrations VALUES(30,'2023_04_01_104043_create_room_contents_table',1);
INSERT INTO migrations VALUES(31,'2023_04_01_104044_create_work_schedules_table',1);
INSERT INTO migrations VALUES(32,'2023_04_05_222105_create_posts_table',1);
INSERT INTO migrations VALUES(33,'2023_04_24_035741_create_employee_types_table',1);
INSERT INTO migrations VALUES(34,'2023_05_14_082353_create_photos_table',1);
